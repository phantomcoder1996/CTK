// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace GUI_Testing
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Tests that the pass key entered by the user is saved in the system property settings
        /// </summary>
        public void TestEnterPassKey()
        {
            #region Variable Declarations
            WinEdit uITB_PassKeyEdit = this.UIKeyEntryDialogWindow.UI__Window.UITB_PassKeyEdit;
            WinButton uIOKButton = this.UIKeyEntryDialogWindow.UIOKWindow.UIOKButton;
            #endregion

            // Last mouse action was not recorded.

            // Click 'TB_PassKey' text box
            Mouse.Click(uITB_PassKeyEdit, new Point(78, 12));

            // Type '__******' in 'TB_PassKey' text box
            uITB_PassKeyEdit.Text = this.TestEnterPassKeyParams.UITB_PassKeyEditText;

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(36, 12));
        }
        
        #region Properties
        public virtual TestEnterPassKeyParams TestEnterPassKeyParams
        {
            get
            {
                if ((this.mTestEnterPassKeyParams == null))
                {
                    this.mTestEnterPassKeyParams = new TestEnterPassKeyParams();
                }
                return this.mTestEnterPassKeyParams;
            }
        }
        
        public UIKeyEntryDialogWindow UIKeyEntryDialogWindow
        {
            get
            {
                if ((this.mUIKeyEntryDialogWindow == null))
                {
                    this.mUIKeyEntryDialogWindow = new UIKeyEntryDialogWindow();
                }
                return this.mUIKeyEntryDialogWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestEnterPassKeyParams mTestEnterPassKeyParams;
        
        private UIKeyEntryDialogWindow mUIKeyEntryDialogWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestEnterPassKey'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestEnterPassKeyParams
    {
        
        #region Fields
        /// <summary>
        /// Type '__******' in 'TB_PassKey' text box
        /// </summary>
        public string UITB_PassKeyEditText = "__******";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIKeyEntryDialogWindow : WinWindow
    {
        
        public UIKeyEntryDialogWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "KeyEntryDialog";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("KeyEntryDialog");
            #endregion
        }
        
        #region Properties
        public UI__Window UI__Window
        {
            get
            {
                if ((this.mUI__Window == null))
                {
                    this.mUI__Window = new UI__Window(this);
                }
                return this.mUI__Window;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI__Window mUI__Window;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI__Window : WinWindow
    {
        
        public UI__Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "TB_PassKey";
            this.WindowTitles.Add("KeyEntryDialog");
            #endregion
        }
        
        #region Properties
        public WinEdit UITB_PassKeyEdit
        {
            get
            {
                if ((this.mUITB_PassKeyEdit == null))
                {
                    this.mUITB_PassKeyEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITB_PassKeyEdit.WindowTitles.Add("KeyEntryDialog");
                    #endregion
                }
                return this.mUITB_PassKeyEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITB_PassKeyEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BTN_OK";
            this.WindowTitles.Add("KeyEntryDialog");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "Ok";
                    this.mUIOKButton.WindowTitles.Add("KeyEntryDialog");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
